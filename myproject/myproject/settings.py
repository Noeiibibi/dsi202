"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&)@5u+$8cjx9!p+u0@jo^-#&8@*5caoje-3a9$_#^i73*@+$c*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'myapp',
    'rest_framework',
    'widget_tweaks',

    # Add for allauth
    'django.contrib.sites',  # Required for django.contrib.sites and allauth
    'allauth',               # allauth core
    'allauth.account',       # allauth account management
    'allauth.socialaccount', # allauth social accounts
    'allauth.socialaccount.providers.google', # Google provider for allauth
]


# allauth specific settings
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1 # Required for django.contrib.sites and allauth. Make sure this Site (ID 1) is configured correctly in Django Admin.

# Redirect URLs for allauth
LOGIN_REDIRECT_URL = 'home' # URL to redirect to after successful login
ACCOUNT_LOGOUT_REDIRECT_URL = 'home' # URL to redirect to after successful logout

# Allauth account settings
ACCOUNT_USERNAME_REQUIRED = True         # Username is required
ACCOUNT_EMAIL_REQUIRED = True            # Email is required
ACCOUNT_AUTHENTICATION_METHOD = 'username_email' # Allow login with username or email
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True # Require password confirmation during signup
ACCOUNT_UNIQUE_EMAIL = True              # Ensure unique email addresses
ACCOUNT_SESSION_REMEMBER = True          # Remember me functionality
ACCOUNT_EMAIL_VERIFICATION = 'none'      # Or 'mandatory' if you want email verification
SOCIALACCOUNT_QUERY_EMAIL = True         # Request email from social providers (e.g., Google)
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [ # What user data you request from Google
            'profile',  # Provides access to public profile information
            'email',    # Provides access to the user's email address
        ],
        'AUTH_PARAMS': {
            'access_type': 'online', # Ensures a refresh token is not returned (unless 'offline' is explicitly requested)
        },
        'APP': { # These will be loaded from Django Admin later, but kept here for reference
            'client_id': os.environ.get('GOOGLE_CLIENT_ID'),     # Get from environment variables
            'secret': os.environ.get('GOOGLE_CLIENT_SECRET'),   # Get from environment variables
            'key': '' # Not typically needed for Google
        }
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'myapp/templates'),
            # allauth will look for templates in 'templates/allauth/' by default
        ],
        'APP_DIRS': True, # This allows Django to find templates within app directories (like allauth)
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Required by allauth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Login settings (these are general Django settings, allauth has its own overrides)
LOGIN_URL = 'login' # This should point to your allauth login URL if you want consistent behavior
# LOGIN_REDIRECT_URL is handled by allauth settings above
# LOGOUT_REDIRECT_URL is handled by allauth settings above